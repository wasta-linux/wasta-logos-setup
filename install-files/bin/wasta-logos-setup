#!/bin/bash

# ==============================================================================
# Logos Wine Setup
#   - Create Logos Wine Prefix
#   - Install .NET 4.8 in Logos Wine Prefix
#   - Install Logos
#
#   2019-09-28 rik: initial script
#   2019-10-04 rik: adding logos download option and additional error processing
#   2019-10-06 rik: adding winetricks ddr=gdi to address graphical glitches
#   2019-10-10 rik: moving winetricks to /usr/local/bin
#   2019-10-20 rik: re-working logic to determine if postinst needs run
#   2019-10-25 rik: re-working logic to use wasta-wine, wasta-winetricks, and
#       wasta-logos-installer
#   2019-12-06 rik: removing "LC_ALL=C" from launcher (prevents using saved
#       layouts)
#   2020-03-12 rik: updating logo
#   2020-05-11 rik: adding sleep before launcher edits
#   2020-05-18 rik: setting Downloads folder from xdg-user-dir
#   2020-11-01 rik: refactoring dialogs for better performance
#
# ==============================================================================

# ------------------------------------------------------------------------------
# Ensure script running as regular user
# ------------------------------------------------------------------------------
if [ $(id -u) -eq 0 ]
then
    echo "wasta-logos-setup started as root user."
    echo "No processing done.  Exiting...."
    exit 0
fi

# ------------------------------------------------------------------------------
# Function: setupPrefix
#
#   Setup Prefix for Logos
# ------------------------------------------------------------------------------
setupPrefix () {
    cleanupPrefix

    # copy in winetricks cache
    rsync -av $WINETRICKS_DIR/winetricks-cache/ $HOME/.cache/winetricks/ | tee >(zenity \
        $ZENITY_SETTINGS --progress --pulsate --auto-close \
        --title="Copying Winetricks Cache" \
        --text="Copying Winetricks Cache... \n\n")

    # setup prefix
    # Note: WINEDLLOVERRIDES was added to try to prevent mono and gecko prompts.
    #   But some users are having freezing issues so I am reverting this.
    WINEPREFIX=$PREFIX WINEARCH=win32 WINEDLLOVERRIDES="mscoree,mshtml=" WINELOADER="$WINE_DIR/bin/wine" $WINE_DIR/bin/wineboot

#| zenity $ZENITY_SETTINGS \
#        --progress --pulsate --auto-close \
#        --title="wasta [Logos] Setup: Creating Prefix" \
#        --text="Creating <i>Logos Wine Prefix</i> ... \n\n" &
#    # get zenity process id
#    PID_ZENITY=${!}

#    # get firstly created process id, which is running parallel to zenity
#    PID_PROCESS=$(pgrep -o -P $$)

#    progressCheck $PID_ZENITY $PID_PROCESS
#    if [ "$?" -eq 99 ];
#    then
#        # zenity canceled, Prefix setup didn't complete
#        # some failure: exit
#        errorExit "<b>Creation of <i>Logos Wine Prefix</i> failed!</b>"
#    fi

    # 2020-10-25: -q is less stable for .NET 4.0 install, so removing: may need
    # to prompt user to guide them on what to click?

    zenity --question $ZENITY_SETTINGS \
        --title="wasta [Logos] Setup: Install .NET" \
        --text="<b>Install / Update <i>.NET 4.0 and 4.8?</i></b>\n
You will need to accept the license agreements to proceed.\n
<i>The installation will take several minutes, please be patient</i>\n\n"

    if [ "$?" -ne 0 ];
    then
        # User didn't say 'Continue': exit
        exit 0
    fi

    WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" WINESERVER="$WINE_DIR/bin/wineserver" "$WINETRICKS_DIR/winetricks" dotnet48

#| zenity $ZENITY_SETTINGS \
#        --progress --pulsate --auto-close \
#        --title="wasta [Logos] Setup: Installing .NET" \
#        --text="Installing .NET 4.0 and 4.8 in the <i>Logos Wine Prefix</i> ... \n\n" &
#    # get zenity process id
#    PID_ZENITY=${!}

#    # get firstly created process id, which is running parallel to zenity
#    PID_PROCESS=$(pgrep -o -P $$)

#    progressCheck $PID_ZENITY $PID_PROCESS
#    if [ "$?" -eq 99 ];
#    then
#        # zenity canceled, Prefix setup didn't complete
#        # some failure: exit
#        errorExit "<b>.NET installation failed!</b>"
#    fi

    # reboot wine
    WINEPREFIX=$PREFIX WINELOADER="$WINE_DIR/bin/wine" $WINE_DIR/bin/wineboot

    zenity --question $ZENITY_SETTINGS \
        --title="wasta [Logos] Setup: MS Corefonts" \
        --text="<b>Install / Update <i>Microsoft Corefonts?</i></b>\n
<i>This may take a few minutes and does not give any output, please be patient</i>\n"

    if [ "$?" -ne 0 ];
    then
        # User didn't say 'Continue': exit
        exit 0
    fi

    WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" WINESERVER="$WINE_DIR/bin/wineserver" "$WINETRICKS_DIR/winetricks" corefonts

#  zenity $ZENITY_SETTINGS \
#        --progress --pulsate --auto-close \
#        --title="wasta [Logos] Setup: Installing CoreFonts" \
#        --text="Installing Corefonts... \n\n" &
#    # get zenity process id
#    PID_ZENITY=${!}

#    # get firstly created process id, which is running parallel to zenity
#    PID_PROCESS=$(pgrep -o -P $$)

#    progressCheck $PID_ZENITY $PID_PROCESS
#    if [ "$?" -eq 99 ];
#    then
#        # zenity canceled, Corefonts install didn't complete
#        errorExit "<b>Corefonts install failed!</b>"
#    fi

    # set fontsmoothing
    # https://wiki.archlinux.org/index.php/Wine#Enable_font_smoothing
    WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" WINESERVER="$WINE_DIR/bin/wineserver" "$WINETRICKS_DIR/winetricks" settings fontsmooth=rgb

    #SetDirectDrawRender to GDI (solves graphical glitching of various menus,
    #   etc disappearing / reappearing)
    WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" WINESERVER="$WINE_DIR/bin/wineserver" "$WINETRICKS_DIR/winetricks" ddr=gdi

    cleanupPrefix
}

# ------------------------------------------------------------------------------
# Function: errorExit
#
#   exit script with passed message
# ------------------------------------------------------------------------------
errorExit () {
    zenity --error $ZENITY_SETTINGS \
        --title="wasta [Logos] Setup: Error" \
        --text="$1 \n
<i>Wasta-Logos-Setup</i> will now exit." >/dev/null 2>&1
    exit 1
}

# ------------------------------------------------------------------------------
# Function: cleanupPrefix
#
#   various cleanup items for the Logos wine prefix
# ------------------------------------------------------------------------------
cleanupPrefix () {
    # remove desktop entries referencing $PREFIX.
    # note: grep --null returns null separated list to handle space in filenames
    # note: xargs -0 to handle null separated items
    grep -r -l --null "$PREFIX" "$HOME/.local/share/applications" \
        | xargs -0 rm >/dev/null 2>&1
}

# ------------------------------------------------------------------------------
# Function: progressCheck
#
#   Check on process launched in parallel with zenity. If zenity is canceled,
#   then kill process.
# ------------------------------------------------------------------------------
progressCheck () {
    echo
    echo "*** Watching zenity process. If it is canceled then kill PID_PROCESS: $PID_PROCESS"
    echo

    # loop to check that progress dialog has not been cancelled
    while [ "$PID_ZENITY" != "" ]
    do
        # check if zenity PID is still there (dialog box still open)
        PID_ZENITY=$(ps h -o pid --pid ${PID_ZENITY} | xargs)

        # sleep for 2 second
        sleep 2
    done

    # if other task still there, kill it
    ps "${PID_PROCESS}"
    if [ "$?" -eq 0 ];
    then
        # parallel process STILL FOUND: user canceled so kill it!
        echo
        echo "*** Zenity process ended (canceled) before parallel process: Killing PID_PROCESS: $PID_PROCESS"
        echo
        kill -9 ${PID_PROCESS}
        return 99
    else
        # parallel process NOT found after zenity completed: both completed
        echo
        echo "*** Zenity process and parallel process both ended: success"
        echo
        return 0
    fi
}

# ------------------------------------------------------------------------------
# Function: indexLogos
#
#   clear Logos index folders and attempt to re-index
# ------------------------------------------------------------------------------
indexLogos () {
    echo
    echo "*** Re-index Logos"
    echo
    # remove corrupt index files
    rm -f "$1Data/"*"/BibleIndex/"*
    rm -f "$1Data/"*"/LibraryIndex/"*
    rm -f "$1Data/"*"/PersonalBookIndex/"*
    rm -f "$1Data/"*"/LibraryCatalog/"*

    # attempt to re-index
    zenity --question $ZENITY_SETTINGS \
        --title="wasta [Logos] Setup: Re-Index Logos?" \
        --text="<b>Do you want to start <i>LogosIndexer.exe</i></b>\n
It may take multiple hours to complete and will \
use a heavy amount of your CPU.\n
If you <i>do not</i> want to re-index now, choose <i>No.</i>"

    if [ "$?" -ne 0 ];
    then
        # User didn't say 'Continue': exit
        exit 0
    fi

    WINEPREFIX=$PREFIX "$WINE_DIR/bin/wine" "$1/System/LogosIndexer.exe" >/dev/null 2>&1 &

    zenity --info $ZENITY_SETTINGS \
        --title="wasta [Logos] Setup: Logos Indexing Started..." \
        --text="<b><i>Logos</i> Indexing has started</b>\n
You should see a <i>Logos Indexing</i> icon in your system tray."

    exit 0
}


# ==============================================================================
# Main Processing
# ==============================================================================

# directories
WINE_DIR=/opt/wasta-wine
WINETRICKS_DIR=/opt/wasta-winetricks
INSTALLER_DIR=/opt/wasta-logos-installer
DOWNLOAD_DIR="$(xdg-user-dir DOWNLOAD)"
DIR=/usr/share/wasta-logos-setup
PREFIX=/home/$USER/.wine-logos
ZENITY_SETTINGS="--height=200 --width=500 --window-icon=/usr/share/icons/hicolor/scalable/apps/wasta-logos.svg"

#Cleanup Index: remove contents of BibleIndex, LibraryIndex, PersonalBookIndex and LibraryCatalog 

zenity --question --title="wasta [Logos] Setup" $ZENITY_SETTINGS \
    --text="<b>Install, Update, or Repair <i>Logos</i>?</b>\n
You need a <i>Logos</i> license to activate <i>Logos</i>. If you need to register,
please visit: <a href='https://www.logos.com/register'>www.logos.com/register</a>\n"

if [ "$?" -eq 0 ];
then
    echo
    echo "wasta-logos-setup starting..."
    echo
else
    # exit
    exit 0
fi

#<b>SELECT</b> your <i>Wasta-Logos-Setup</i> option:\n
#(<i>Re-Index Logos</i> is only needed if your existing
#<i>Logos</i> installation reports errors in indexing)\n" \
#    --radiolist --column "        " --column "Hidden" --column "Option" \
#    --hide-column=2 --hide-header \
#        TRUE   INSTALL  "Install, re-install, or update Logos" \
#        FALSE  INDEX    "Re-Index Logos")
#       FALSE  BACKUP   "Backup current Logos installation" \
#       FALSE  RESTORE  "Restore previously backed up Logos installation")


#case "$OPTION" in
#"INSTALL")
#    echo
#    echo "Continuing to wasta-logos-setup install process"
#    echo
#;;

#"INDEX")
#    LOGOS_FOLDER="$PREFIX/drive_c/users/$USER/Local Settings/Application Data/Logos/"
#    if [ -d "$LOGOS_FOLDER" ];
#    then
#        indexLogos "$LOGOS_FOLDER"
#    else
#        errorExit "<b><i>Logos</i> is NOT installed</b>\n
#To install <i>Logos<i> please re-run <i>wasta-logos-setup</i>
#and choose the <i>Install</> option."
#    fi
#;;

#*)
#    # exit: user did not select a choice
#    exit 0
#;;

#esac

# ------------------------------------------------------------------------------
# Setup Logos Prefix and install Logos
# ------------------------------------------------------------------------------

if [ -d "$PREFIX" ];
then
    # Wine PREFIX exists, ask user if they want to overwrite it or update it
    zenity --question $ZENITY_SETTINGS \
        --title="wasta [Logos] Setup: Delete?" \
        --text="<b>Delete existing <i>Logos</i> installation?</b>\n
The folder <u>$PREFIX</u> already exists. Do you want to
<u>delete</u> it in order to <u>re-install</u> <i>Logos?</i>\n
<i>(This could result in several GB needing to be downloaded from the internet)</i>\n"

    if [ "$?" -eq 0 ];
    then
        # remove PREFIX
        rm -rf $PREFIX
        setupPrefix
    else
        # Wine PREFIX exists, ask user if they want to update or repair install
        zenity --question $ZENITY_SETTINGS \
            --title="wasta [Logos] Setup: Update?" \
            --text="<b>Update existing <i>Logos</i> install?</b>\n
The folder <u>$PREFIX</u> already exists. Do you want to
re-run the <i>Logos</i> installer to <u>update</u> or <u>repair</u> <i>Logos?</i>\n"

        if [ "$?" -eq 0 ];
        then
            # ensure Prefix updated
            setupPrefix
        else
            # user doesn't want to update and doesn't want to re-install: exit
            exit 0
        fi
    fi
else
    # No Wine PREFIX: prompt user
    zenity --question $ZENITY_SETTINGS \
        --title="wasta [Logos] Setup: Install?" \
        --text="<b>Install <i>Logos?</i></b>\n
No existing <i>Logos</i> installation found. Do you want install now?\n"

    if [ "$?" -eq 0 ];
    then
        # User said yes: setup PREFIX
        setupPrefix
    else
        # exit
        exit 0
    fi
fi

if [ -d "$PREFIX" ];
then
    INSTALL_FILE=""
    if [ -e "$DOWNLOAD_DIR/Logos-x86.msi" ];
    then
        INSTALL_FILE="$DOWNLOAD_DIR/Logos-x86.msi"
    elif [ -e "$INSTALLER_DIR/Logos-x86.msi" ];
    then
        INSTALL_FILE="$INSTALLER_DIR/Logos-x86.msi"
    else
        errorExit "<b>A <i>Logos</i> installer wasn't found in your <i>Downloads</i> folder
or from the <i>wasta-logos-installer</i> package.</b> You will need to put the
<i>Logos-x86.msi</i> installer in one of these two locations and then
re-run <i>wasta-logos-setup</i>.

The recommended method is to install the <i>wasta-logos-installer</i> package."
    fi

    echo
    echo "*** Logos installation file: $INSTALL_FILE"
    echo

    if [ "$INSTALL_FILE" ];
    then
        # Make Winecfg launcher available for user
        cp $DIR/resources/wine-logos-winecfg.desktop $HOME/.local/share/applications/

        # Set Wine to win7 for Logos install
        WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" WINESERVER="$WINE_DIR/bin/wineserver" "$WINETRICKS_DIR/winetricks" -q win7

        WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" "$WINE_DIR/bin/msiexec" /i "$INSTALL_FILE"
        OUTNUM=$?
        if [ "$OUTNUM" -ne 0 ];
        then
            # some failure: exit
            errorExit "<b><i>Logos</i> installation failed!</b>\n
<i>Some error encountered with installation file:</i>\n
$INSTALL_FILE"
        fi

        # not sure why but below edits to launcher were not getting applied
        #   with a message that the file wasn't found:
        #   Adding sleep to see if helps
        sleep 2

        # point to specific version of wine to run Logos
        sed -i -e "s@ wine @ $WINE_DIR/bin/wine @" $HOME/.local/share/applications/wine/Programs/Logos\ Bible\ Software.desktop

        # 2020-10-25: not sure why, but launcher getting created with wrong wine
        #   reference: fix it if found
        sed -i -e "s@ //bin/wine @ $WINE_DIR/bin/wine @" $HOME/.local/share/applications/wine/Programs/Logos\ Bible\ Software.desktop

        # Set Wine to winxp for Logos Usage
        WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" WINESERVER="$WINE_DIR/bin/wineserver" "$WINETRICKS_DIR/winetricks" -q winxp

        LOGOS_FOLDER=$(echo \
            "$HOME/.wine-logos/drive_c/users/$USER/Local Settings/Application Data/Logos/")

        zenity --info $ZENITY_SETTINGS \
            --title="wasta [Logos] Setup: Complete" \
            --text="<b><i>Logos</i> setup complete!</b>\n
Find <i>Logos Bible Software</i> in the <u>Main Menu</u> under the <u>Wine</u> category\n
After logging in to activate <i>Logos</i>, if you want to copy your <i>Logos</i>
resources from a saved location, close <i>Logos</i> and replace <u>the contents</u>
of the <u>Data</u>, <u>Documents</u>, and <u>Users</u> folders
in the <u>Logos Folder</u> <i>(click to open):</i>\n
<a href='file://$LOGOS_FOLDER'>$LOGOS_FOLDER</a>\n"
    else
        # not a valid 'logos*.msi' file: exit
        errorExit "<b>No valid <i>Logos-x86.msi</i> file found.</b>"
    fi
fi

exit 0
