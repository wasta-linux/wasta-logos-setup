#!/bin/bash

# ==============================================================================
# Logos Wine Setup
#   - Create Logos Wine Prefix
#   - Install .NET 4.8 in Logos Wine Prefix
#   - Install Logos
#
#   2019-09-28 rik: initial script
#   2019-10-04 rik: adding logos download option and additional error processing
#   2019-10-06 rik: adding winetricks ddr=gdi to address graphical glitches
#   2019-10-10 rik: moving winetricks to /usr/local/bin
#   2019-10-20 rik: re-working logic to determine if postinst needs run
#   2019-10-25 rik: re-working logic to use wasta-wine, wasta-winetricks, and
#       wasta-logos-installer
#   2019-12-06 rik: removing "LC_ALL=C" from launcher (prevents using saved
#       layouts)
#   2020-03-12 rik: updating logo
#   2020-05-11 rik: adding sleep before launcher edits
#   2020-05-18 rik: setting Downloads folder from xdg-user-dir
#   2020-11-01 rik: refactoring dialogs for better performance
#   2020-11-24 rik: refactoring dialogs and using ~/.logos-data so not deleted
#       on re-install.
#
# ==============================================================================

# ------------------------------------------------------------------------------
# Ensure script running as regular user
# ------------------------------------------------------------------------------
if [ $(id -u) -eq 0 ]
then
    echo "wasta-logos-setup started as root user."
    echo "Restart without using 'sudo'.  Exiting...."
    exit 0
fi

# ------------------------------------------------------------------------------
# Function: setupPrefix
#
#   Setup Prefix for Logos
# ------------------------------------------------------------------------------
setupPrefix () {
    cleanupPrefix

    # copy in winetricks cache
    rsync -av $WINETRICKS_DIR/winetricks-cache/ $HOME/.cache/winetricks/ | tee -a $LOG | tee >(zenity \
        $ZENITY_SETTINGS --progress --pulsate --auto-close \
        --title="Copying Winetricks Cache" \
        --text="Copying Winetricks Cache... \n\n")

    # setup prefix
    # Note: WINEDLLOVERRIDES was added to try to prevent mono and gecko prompts.
    #   But some users are having freezing issues so I am reverting this.
    WINEPREFIX=$PREFIX WINEARCH=win32 WINEDLLOVERRIDES="mscoree,mshtml=" \
        WINELOADER="$WINE_DIR/bin/wine" $WINE_DIR/bin/wineboot | tee -a $LOG | tee >(zenity \
        $ZENITY_SETTINGS --progress --pulsate --auto-close \
        --title="Creating Wine Prefix" \
        --text="Creating Wine Prefix: $PREFIX... \n\n")

    if [ "$?" -ne 0 ];
    then
         errorExit "Creating Wine Prefix failed!</b>\n"
    fi

    # make sure residual wineprocesses clear out
    sleep 5

    WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" \
        WINESERVER="$WINE_DIR/bin/wineserver" \
        "$WINETRICKS_DIR/winetricks" dotnet48 | tee -a $LOG | tee >(zenity \
        $ZENITY_SETTINGS --progress --pulsate --auto-close \
        --title="Installing .NET" \
        --text="Installing .NET 4.0 and 4.8 in <i>$PREFIX</i> ... \n\n")

    if [ "$?" -ne 0 ];
    then
         errorExit "Installing .NET 4.0 or 4.8 failed!</b>\n"
    fi

    # make sure residual wineprocesses clear out
    sleep 5

    WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" \
        WINESERVER="$WINE_DIR/bin/wineserver" \
        "$WINETRICKS_DIR/winetricks" corefonts  | tee -a $LOG | tee >(zenity \
        $ZENITY_SETTINGS --progress --pulsate --auto-close \
        --title="Installing Core Fonts" \
        --text="Installing Core Fonts in <i>$PREFIX</i> ... \n\n")

    if [ "$?" -ne 0 ];
    then
         errorExit "Installing Core Fonts failed!</b>\n"
    fi

    # make sure residual wineprocesses clear out
    sleep 2

    # set fontsmoothing
    # https://wiki.archlinux.org/index.php/Wine#Enable_font_smoothing
    WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" WINESERVER="$WINE_DIR/bin/wineserver" "$WINETRICKS_DIR/winetricks" settings fontsmooth=rgb | tee -a $LOG 

    #SetDirectDrawRender to GDI (solves graphical glitching of various menus,
    #   etc disappearing / reappearing)
    WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" WINESERVER="$WINE_DIR/bin/wineserver" "$WINETRICKS_DIR/winetricks" ddr=gdi | tee -a $LOG 

    cleanupPrefix
}

# ------------------------------------------------------------------------------
# Function: errorExit
#
#   exit script with passed message
# ------------------------------------------------------------------------------
errorExit () {
    zenity --error $ZENITY_SETTINGS \
        --title="wasta [Logos] Setup: Error" \
        --text="$1 \n
<i>Wasta-Logos-Setup</i> will now exit." >/dev/null 2>&1

    echo | tee -a $LOG
    echo "*** Error: $1" | tee -a $LOG
    echo | tee -a $LOG

    exit 1
}

# ------------------------------------------------------------------------------
# Function: cleanupPrefix
#
#   various cleanup items for the Logos wine prefix
# ------------------------------------------------------------------------------
cleanupPrefix () {
    # remove desktop entries referencing $PREFIX.
    # note: grep --null returns null separated list to handle space in filenames
    # note: xargs -0 to handle null separated items
    grep -r -l --null "$PREFIX" "$HOME/.local/share/applications" \
        | xargs -0 rm >/dev/null 2>&1
}

# ------------------------------------------------------------------------------
# Function: indexLogos
#
#   clear Logos index folders and attempt to re-index
# ------------------------------------------------------------------------------
indexLogos () {
    echo
    echo "*** Re-index Logos"
    echo
    # remove corrupt index files
    rm -f "$1Data/"*"/BibleIndex/"*
    rm -f "$1Data/"*"/LibraryIndex/"*
    rm -f "$1Data/"*"/PersonalBookIndex/"*
    rm -f "$1Data/"*"/LibraryCatalog/"*

    # attempt to re-index
    zenity --question $ZENITY_SETTINGS \
        --title="wasta [Logos] Setup: Re-Index Logos?" \
        --text="<b>Do you want to start <i>LogosIndexer.exe</i></b>\n
It may take multiple hours to complete and will \
use a heavy amount of your CPU.\n
If you <i>do not</i> want to re-index now, choose <i>No.</i>"

    if [ "$?" -ne 0 ];
    then
        # User didn't say 'Continue': exit
        exit 0
    fi

    WINEPREFIX=$PREFIX "$WINE_DIR/bin/wine" "$1/System/LogosIndexer.exe" >/dev/null 2>&1 &

    zenity --info $ZENITY_SETTINGS \
        --title="wasta [Logos] Setup: Logos Indexing Started..." \
        --text="<b><i>Logos</i> Indexing has started</b>\n
You should see a <i>Logos Indexing</i> icon in your system tray."

    exit 0
}

# ==============================================================================
# Main Processing
# ==============================================================================

# setup variables and create log
WINE_DIR=/opt/wasta-wine
WINETRICKS_DIR=/opt/wasta-winetricks
INSTALLER_DIR=/opt/wasta-logos-installer
DOWNLOAD_DIR="$(xdg-user-dir DOWNLOAD)"
DIR=/usr/share/wasta-logos-setup
PREFIX="$HOME/.wine-logos"
LOGOS_DATA="$HOME/.logos-data"
LOGOS_FOLDER="$HOME/.wine-logos/drive_c/users/$USER/Local Settings/Application Data/Logos/"
ZENITY_SETTINGS="--height=200 --width=500 \
    --window-icon=/usr/share/icons/hicolor/scalable/apps/wasta-logos.svg"

RUN_DATE=$(date +%F)
LOG_DIR="$HOME/.cache/wasta-logos-setup/"
LOG="$LOG_DIR/$RUN_DATE-wasta-logos-setup.log"
mkdir -p "$LOG_DIR"

zenity --question --title="wasta [Logos] Setup" $ZENITY_SETTINGS \
    --text="<b>Install or re-install Logos?</b>\n
You need a <i>Logos</i> license to activate <i>Logos</i>. If you need to register,
please visit: <a href='https://www.logos.com/register'>www.logos.com/register</a>\n
<i>If Logos is already installed, your existing Logos data will be
saved and re-linked to the new Logos installation</i>\n
<i>Make sure no other WINE applications are running before continuing</i>"

if [ "$?" -eq 0 ];
then
    echo | tee -a $LOG
    echo "===========================================================" | tee -a $LOG
    echo $(date +%F-%R:%S) "wasta-logos-setup started" | tee -a $LOG
    echo "-----------------------------------------------------------" | tee -a $LOG
else
    # exit
    exit 0
fi

#<b>SELECT</b> your <i>Wasta-Logos-Setup</i> option:\n
#(<i>Re-Index Logos</i> is only needed if your existing
#<i>Logos</i> installation reports errors in indexing)\n" \
#    --radiolist --column "        " --column "Hidden" --column "Option" \
#    --hide-column=2 --hide-header \
#        TRUE   INSTALL  "Install, re-install, or update Logos" \
#        FALSE  INDEX    "Re-Index Logos")
#       FALSE  BACKUP   "Backup current Logos installation" \
#       FALSE  RESTORE  "Restore previously backed up Logos installation")


#case "$OPTION" in
#"INSTALL")
#    echo
#    echo "Continuing to wasta-logos-setup install process"
#    echo
#;;

#"INDEX")
#    LOGOS_FOLDER="$PREFIX/drive_c/users/$USER/Local Settings/Application Data/Logos/"
#    if [ -d "$LOGOS_FOLDER" ];
#    then
#        indexLogos "$LOGOS_FOLDER"
#    else
#        errorExit "<b><i>Logos</i> is NOT installed</b>\n
#To install <i>Logos<i> please re-run <i>wasta-logos-setup</i>
#and choose the <i>Install</> option."
#    fi
#;;

#*)
#    # exit: user did not select a choice
#    exit 0
#;;

#esac

# ------------------------------------------------------------------------------
# Setup Logos Prefix and install Logos
# ------------------------------------------------------------------------------

mkdir -p "$LOGOS_DATA/Data" "$LOGOS_DATA/Documents" "$LOGOS_DATA/Users"

if [ -d "$LOGOS_FOLDER/Data" ] && ! [ -L "$LOGOS_FOLDER/Data" ];
then
    # exists and is not symlink: move it
    echo | tee -a $LOG
    echo "*** Moving existing Logos Data to: $LOGOS_DATA/Data" | tee -a $LOG
    echo | tee -a $LOG
    mv "$LOGOS_FOLDER/Data" "$LOGOS_DATA/Data"
fi

if [ -d "$LOGOS_FOLDER/Documents" ] && ! [ -L "$LOGOS_FOLDER/Documents" ];
then
    # exists and is not symlink: move it
    echo | tee -a $LOG
    echo "*** Moving existing Logos Documents to: $LOGOS_DATA/Documents" | tee -a $LOG
    echo | tee -a $LOG
    mv "$LOGOS_FOLDER/Documents" "$LOGOS_DATA/Documents"
fi

if [ -d "$LOGOS_FOLDER/Users" ] && ! [ -L "$LOGOS_FOLDER/Users" ];
then
    # exists and is not symlink: move it
    echo | tee -a $LOG
    echo "*** Moving existing Logos Users to: $LOGOS_DATA/Users" | tee -a $LOG
    echo | tee -a $LOG
    mv "$LOGOS_FOLDER/Users" "$LOGOS_DATA/Users"
fi

# make sure any residual wine processes are not running (to prevent hanging)
echo | tee -a $LOG
echo "*** Making sure no residual wine processes running" | tee -a $LOG
echo | tee -a $LOG

killall wineserver winedevice.exe mscorsvw.exe svchost.exe rpcss.exe \
    plugplay.exe services.exe 2>&1 | tee -a $LOG

if [ -d "$PREFIX" ];
then
    rm -rf $PREFIX
fi

setupPrefix

INSTALL_FILE=""
if [ -e "$DOWNLOAD_DIR/Logos-x86.msi" ];
then
    INSTALL_FILE="$DOWNLOAD_DIR/Logos-x86.msi"
elif [ -e "$INSTALLER_DIR/Logos-x86.msi" ];
then
    INSTALL_FILE="$INSTALLER_DIR/Logos-x86.msi"
else
    errorExit "<b>A <i>Logos</i> installer wasn't found in your <i>Downloads</i> folder
or from the <i>wasta-logos-installer</i> package.</b> You will need to put the
<i>Logos-x86.msi</i> installer in one of these two locations and then
re-run <i>wasta-logos-setup</i>.

The recommended method is to install the <i>wasta-logos-installer</i> package."
fi

echo | tee -a $LOG
echo "*** Logos installation file: $INSTALL_FILE" | tee -a $LOG
echo | tee -a $LOG

if [ "$INSTALL_FILE" ];
then
    # Make Winecfg launcher available for user
    cp $DIR/resources/wine-logos-winecfg.desktop $HOME/.local/share/applications/

    # Set Wine to win7 for Logos install
    WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" WINESERVER="$WINE_DIR/bin/wineserver" "$WINETRICKS_DIR/winetricks" -q win7 | tee -a $LOG

    WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" "$WINE_DIR/bin/msiexec" /i "$INSTALL_FILE" | tee -a $LOG
    OUTNUM=$?
    if [ "$OUTNUM" -ne 0 ];
    then
        # some failure: exit
        errorExit "<b><i>Logos</i> installation failed!</b>\n
<i>Some error encountered with installation file:</i>\n
$INSTALL_FILE"
    fi

    # make sure residual wineprocesses clear out
    sleep 2

    # point to specific version of wine to run Logos
    sed -i -e "s@ wine @ $WINE_DIR/bin/wine @" $HOME/.local/share/applications/wine/Programs/Logos\ Bible\ Software.desktop

    # 2020-10-25: not sure why, but launcher getting created with wrong wine
    #   reference: fix it if found
    sed -i -e "s@ //bin/wine @ $WINE_DIR/bin/wine @" $HOME/.local/share/applications/wine/Programs/Logos\ Bible\ Software.desktop

    # some occasional hanging after setting to winxp, doing a wineboot
    # WINEPREFIX=$PREFIX WINELOADER="$WINE_DIR/bin/wine" $WINE_DIR/bin/wineboot | tee -a $LOG

    # Set Wine to winxp for Logos Usage
    WINEPREFIX=$PREFIX WINE="$WINE_DIR/bin/wine" WINESERVER="$WINE_DIR/bin/wineserver" "$WINETRICKS_DIR/winetricks" -q winxp | tee -a $LOG

    # Symlink to $LOGOS_DATA
    rm -rf "$LOGOS_FOLDER/Data"
    ln -s "$LOGOS_DATA/Data" "$LOGOS_FOLDER/Data"

    rm -rf "$LOGOS_FOLDER/Documents"
    ln -s "$LOGOS_DATA/Documents" "$LOGOS_FOLDER/Documents"

    rm -rf "$LOGOS_FOLDER/Users"
    ln -s "$LOGOS_DATA/Users" "$LOGOS_FOLDER/Users"

    zenity --info $ZENITY_SETTINGS \
        --title="wasta [Logos] Setup: Complete" \
        --text="<b>Logos Setup Complete!</b>\n
Find <i>Logos Bible Software</i> in the <u>Main Menu</u> under the <u>Wine</u> category\n
If you want to copy your <i>Logos</i> Data from a saved location, replace
the <u>Data</u>, <u>Documents</u>, and <u>Users</u> folders in the <u>Logos Data Folder</u>\n
<i>(click to open):</i> <a href='file://$LOGOS_DATA'>$LOGOS_DATA</a>\n"
else
    # not a valid 'logos*.msi' file: exit
    errorExit "<b>No valid <i>Logos-x86.msi</i> file found.</b>"
fi

echo | tee -a $LOG
echo "-----------------------------------------------------------" | tee -a $LOG
echo $(date +%F-%R:%S) "wasta-logos-setup complete" | tee -a $LOG
echo "===========================================================" | tee -a $LOG
echo | tee -a $LOG

exit 0
